def VAR_CODE

pipeline {
    agent any
        parameters {
        string(name: 'BUILD_NAME', defaultValue: "Cloud Automation")
        extendedChoice(name: 'CLOUD_PROVIDERS',
                description: 'Leave unselected to run for all providers',
                multiSelectDelimiter: ',',
                type: 'PT_MULTI_SELECT',
                value: 'AWS,GCP,Azure',
                defaultValue: "AWS",
                visibleItemCount: 3)
        extendedChoice(name: 'SETUP_SELECTION',
                description: 'Setups to run tests against',
                multiSelectDelimiter: ',',
                quoteValue: false,
                saveJSONParameterToFile: false,
                type: 'PT_MULTI_SELECT',
                value: 'mx_gw_byol,mxha_gw_byol',
                defaultValue: "mx_gw_byol",
                visibleItemCount: 3)
        choice(name: 'SG_MODE', choices: ["active", "simulation"], description: 'Server Group operation mode')
        choice(name: 'GRPC_SG_MODE', choices: ["active", "simulation"], description: 'gRPC Server Group operation mode')
        choice(name: 'ENVOY_DEPLOYMENT', choices: ['standalone_envoy'], description: 'Envoy deployment model for WaaP tests')
        string(name: 'ENVOY_IP', defaultValue: "10.188.0.0", description: "Specify if you want to run tests on already deployed env")
        string(name: 'GRPC_GW_IP', defaultValue: "10.188.0.0", description: "Specify if you want to run tests on already deployed env")
        string(name: 'MX_IP', defaultValue: "10.188.0.0", description: "Specify if you want to run tests on already deployed env")
        string(name: 'GW_IP', defaultValue: "10.188.0.0", description: "Specify if you want to run tests on already deployed env")
        string(name: 'LB_DNS_NAME', defaultValue: "", description: "Specify if you want to run tests on already deployed env")
        string(name: 'BUILD', defaultValue: '14.7.0.20_latest',
                description: 'Build for auto deploy. Specify "latest" after underscore to automatically get the latest one.')
        extendedChoice(name: 'TESTS_TO_RUN',
                description: 'Select test suites to run. Leave unselected to run all the tests',
                multiSelectDelimiter: ' or ',
                quoteValue: false,
                saveJSONParameterToFile: false,
                type: 'PT_MULTI_SELECT',
                value: 'smoke,dictionaries,sni,ssl_reuse,error_page,ldr,ctd,ssl_ciphers,' +
                        'json_normalize,websocket,smuggling_attack,form_data,xml_normalize,adc,utf_8,' +
                        'sql_xss_injections,tls_signature_algorithms,tls_certificate_authorities,tls_settings,' +
                        'client_hello,multipart,http2,crl,validate_server_cert,aut,waap,mxha,following_actions',
                visibleItemCount: 10)
        choice(name: 'LOG_LEVEL', choices: ['INFO', 'DEBUG'], description: '')
        booleanParam(name: 'NIGHTLY_RUN', defaultValue: false)
        booleanParam(name: "DELETE_ENV", defaultValue: true)
        booleanParam(name: "DEPLOY_ENV", defaultValue: true)
        booleanParam(name: "CLOUD_FORMATION", defaultValue: true, description: "All AWS deployments will be done via CTT and CloudFormation.")
        booleanParam(name: 'HTTP2_ENABLED', defaultValue: true)
        booleanParam(name: 'ENABLE_TESTRAIL_INTEGRATION', defaultValue: false)
        string(name: 'TEST_PLAN_ID', defaultValue: '', description: 'Specify to have results published into particular Test Plan in TestRail')
    }
        stages {
   stage('Echo selection'){
    steps {
            script {
                VAR_CODE = '123'
            }
            echo 'Build name\t' + params.BUILD_NAME
            echo 'BUILD_NUMBER\t' + env.BUILD_NUMBER
            echo 'JOB_NAME\t' + env.JOB_NAME
            echo 'JENKINS_HOME\t' + env.JENKINS_HOME

      }
    }
    }
    post {
        always {
            script {
            echo 'gVarCode\t' + VAR_CODE
            }
            }
            }
}
